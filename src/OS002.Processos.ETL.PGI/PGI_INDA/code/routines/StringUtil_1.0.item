package routines;

import java.text.Normalizer;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class StringUtil {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
       
    public static String removeAcentos(String str) {
    	  str = Normalizer.normalize(str, Normalizer.Form.NFD);
    	  str = str.replaceAll("[^\\p{ASCII}]", "");
    	  return str;
    	 
    	}
    
    public static String stringToUnicode(String str) {  
        StringBuffer ostr = new StringBuffer();  
  
        for (int i = 0; i < str.length(); i++) {  
            char ch = str.charAt(i);  
            /* Caracter a ser convertido para Unicode */  
            if ((ch >= 0x0020) && (ch <= 0x007e)) {  
                ostr.append(ch);  
            } else {  
                ostr.append("\\u"); /* Formato de unicode padrão */  
                /* Captura o valor hexadecimal do caracter */  
                String hex = Integer.toHexString(str.charAt(i) & 0xFFFF);  
                for (int j = 0; j < 4 - hex.length(); j++) {  
                    /* Concatena o zero porque o unicode requer 4 digitos */  
                    ostr.append("0");  
                }  
                ostr.append(hex.toLowerCase());  
            }  
        }  
        return (new String(ostr));  
    }
    
}
